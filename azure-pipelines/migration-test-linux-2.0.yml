trigger:
- masterx

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  projectPath: './NetCore2.0TestApplication/NetCore2.0TestApplication/NetCore2.0TestApplication.csproj'
  libraryPath: './NetCore2.0TestApplication/NetCore2.0TestLibrary/NetCore2.0TestLibrary.csproj'
  netSdkVersion: '2.2.207'

steps:

- task: UseDotNet@2
  displayName: 'Use .Net Core sdk $(netSdkVersion)'
  inputs:
    version: $(netSdkVersion)

- script: 'dotnet restore $(projectPath)'
  displayName: Restore

- script: 'dotnet build $(projectPath) --configuration $(buildConfiguration)'
  displayName: Build

- task: efcore-migration-script-generator-task@1
  displayName: 'Generate migrations scripts - Library project'
  inputs:
    projectpath: $(libraryPath)
    databasecontexts: |
     LibraryDatabaseContext
     InternalLibraryDatabaseContext
    startupprojectpath: $(projectPath)
    installdependencies: false
    eftoolversion: '$(efToolVersion)'

- task: efcore-migration-script-generator-task@1
  displayName: 'Generate migrations scripts - Main project'
  inputs:
    projectpath: $(projectPath)
    databasecontexts: FirstDatabaseContext
    installdependencies: false

- task: efcore-migration-script-generator-task@1
  displayName: 'Generate migrations scripts - All in one'
  inputs:
    projectpath: $(projectPath)
    databasecontexts: |
     FirstDatabaseContext
     SecondDatabaseContext
     LibraryDatabaseContext
     InternalLibraryDatabaseContext
    installdependencies: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'

